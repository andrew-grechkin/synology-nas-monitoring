{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "iteration": 1641573481878,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 60,
      "title": "Overview",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "gradient-gauge"
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 0,
        "y": 1
      },
      "id": 20,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Clients"
          }
        ]
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"serviceTable\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> group()",
          "refId": "A"
        }
      ],
      "title": "Services",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "_field": true,
              "_measurement": true,
              "_start": true,
              "_stop": true,
              "_time": true,
              "agent_host": true,
              "host": true,
              "serviceInfoIndex": true
            },
            "indexByName": {
              "_field": 5,
              "_measurement": 6,
              "_start": 0,
              "_stop": 1,
              "_time": 2,
              "_value": 4,
              "agent_host": 7,
              "host": 8,
              "serviceInfoIndex": 9,
              "serviceName": 3
            },
            "renameByName": {
              "_value": "Clients",
              "serviceName": "Service"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 8,
        "x": 8,
        "y": 1
      },
      "id": 4,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "version = from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"synoSystem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"version\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n\r\nmodel = from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"synoSystem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"modelName\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n\r\nunion(tables: [version, model])\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({ \"Synology Model\": r[\"modelName\"], \"DSM Version\": r[\"version\"] }))",
          "refId": "A"
        }
      ],
      "title": "Information",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "DSM Version": 1,
              "Synology Model": 0
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 60
              },
              {
                "color": "orange",
                "value": 70
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 20,
        "y": 1
      },
      "id": 42,
      "options": {
        "displayMode": "lcd",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"synoSystem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n",
          "refId": "A"
        }
      ],
      "title": "CPU Temperature",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 0.8
              },
              {
                "color": "red",
                "value": 0.9
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 20,
        "y": 3
      },
      "id": 43,
      "options": {
        "displayMode": "lcd",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true
      },
      "pluginVersion": "8.3.3",
      "repeat": "volumes",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hrStorageTable\")\r\n  |> filter(fn: (r) => r[\"hrStorageDescr\"] == ${volumes:doublequote})\r\n  |> filter(fn: (r) => r[\"_field\"] == \"hrStorageSize\" or r[\"_field\"] == \"hrStorageUsed\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> group()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({\r\n    r with \"Used\": float(v: r[\"hrStorageUsed\"]) / float(v: r[\"hrStorageSize\"])\r\n  }))\r\n  |> drop(columns: [\"hrStorageSize\", \"hrStorageUsed\"])\r\n",
          "refId": "A"
        }
      ],
      "title": "Capacity (${volumes})",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "dtdhms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 8,
        "x": 8,
        "y": 4
      },
      "id": 32,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hrSystem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"hrSystemUptime\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> map(fn: (r) => ({ r with \"_value\": float(v: r[\"_value\"]) / 100.0 }))",
          "refId": "A"
        }
      ],
      "title": "Uptime",
      "transformations": [],
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 0.7
              },
              {
                "color": "orange",
                "value": 0.8
              },
              {
                "color": "red",
                "value": 0.9
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 8,
        "y": 6
      },
      "id": 45,
      "options": {
        "displayMode": "lcd",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "numCpus = from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"systemStats\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ssCpuNumCpus\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> group()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n\r\nstats = from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"systemStats\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ssCpuRawSystem\" or r[\"_field\"] == \"ssCpuRawUser\" or r[\"_field\"] == \"ssCpuRawWait\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> derivative()\r\n  |> last()\r\n  |> group()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n\r\njoin(\r\n    tables: { numCpus: numCpus, stats: stats },\r\n    on: [\"_time\"]\r\n  )\r\n  |> map(fn: (r) => ({\r\n    \"cpuUsed\": (r[\"ssCpuRawSystem\"] / float(v: r[\"ssCpuNumCpus\"]) + r[\"ssCpuRawUser\"] / float(v: r[\"ssCpuNumCpus\"]) + r[\"ssCpuRawWait\"] / float(v: r[\"ssCpuNumCpus\"])) / 100.0\r\n  }))",
          "refId": "A"
        }
      ],
      "title": "CPU",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 0.7
              },
              {
                "color": "orange",
                "value": 0.8
              },
              {
                "color": "red",
                "value": 0.9
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 4,
        "x": 12,
        "y": 6
      },
      "id": 44,
      "options": {
        "displayMode": "lcd",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "memTotal = from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hrStorageTable\")\r\n  |> filter(fn: (r) => r[\"hrStorageDescr\"] == \"Physical memory\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"hrStorageSize\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> group()\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> rename(columns: { \"hrStorageSize\": \"memTotal\" })\r\n\r\nmemStats = from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"memory\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"memAvailReal\" or r[\"_field\"] == \"memBuffer\" or r[\"_field\"] == \"memCached\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> group()\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n\r\njoin(\r\n    tables: { memTotal: memTotal, memStats: memStats },\r\n    on: [\"_time\"]\r\n  )\r\n  |> map(fn: (r) => ({ \"memUsed\": float(v: r[\"memAvailReal\"] + r[\"memBuffer\"] + r[\"memCached\"]) / float(v: r[\"memTotal\"]) }))\r\n",
          "refId": "A"
        }
      ],
      "title": "Memory",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "1": {
                  "color": "green",
                  "index": 0,
                  "text": "Normal"
                },
                "2": {
                  "color": "red",
                  "index": 1,
                  "text": "Failed"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 8,
        "y": 8
      },
      "id": 37,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"synoSystem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"powerStatus\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n",
          "refId": "A"
        }
      ],
      "title": "Power Status",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "1": {
                  "color": "green",
                  "index": 0,
                  "text": "Normal"
                },
                "2": {
                  "color": "red",
                  "index": 1,
                  "text": "Failed"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 10,
        "y": 8
      },
      "id": 39,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"synoSystem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"cpuFanStatus\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n",
          "refId": "A"
        }
      ],
      "title": "CPU Fan Status",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "1": {
                  "color": "green",
                  "index": 0,
                  "text": "Normal"
                },
                "2": {
                  "color": "red",
                  "index": 1,
                  "text": "Failed"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 12,
        "y": 8
      },
      "id": 38,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"synoSystem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"systemFanStatus\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n",
          "refId": "A"
        }
      ],
      "title": "System Fan Status",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "1": {
                  "color": "green",
                  "index": 0,
                  "text": "Normal"
                },
                "2": {
                  "color": "red",
                  "index": 1,
                  "text": "Failed"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 14,
        "y": 8
      },
      "id": 36,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"synoSystem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"systemStatus\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n",
          "refId": "A"
        }
      ],
      "title": "System Status",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "1": {
                  "color": "blue",
                  "index": 0,
                  "text": "Available"
                },
                "2": {
                  "color": "green",
                  "index": 1,
                  "text": "Unavailable"
                },
                "3": {
                  "color": "blue",
                  "index": 2,
                  "text": "Connecting"
                },
                "4": {
                  "color": "orange",
                  "index": 3,
                  "text": "Disconnected"
                },
                "5": {
                  "color": "orange",
                  "index": 4,
                  "text": "Others"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 14,
        "y": 10
      },
      "id": 40,
      "options": {
        "colorMode": "background",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"synoSystem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"upgradeAvailable\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n",
          "refId": "A"
        }
      ],
      "title": "Upgrade",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "diskStatus"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "1": {
                        "color": "green",
                        "index": 0,
                        "text": "Normal"
                      },
                      "2": {
                        "color": "blue",
                        "index": 1,
                        "text": "Initialized"
                      },
                      "3": {
                        "color": "orange",
                        "index": 2,
                        "text": "Not Initialized"
                      },
                      "4": {
                        "color": "red",
                        "index": 3,
                        "text": "System Partition Failed"
                      },
                      "5": {
                        "color": "red",
                        "index": 4,
                        "text": "Crashed"
                      }
                    },
                    "type": "value"
                  }
                ]
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Temperature"
            },
            "properties": [
              {
                "id": "unit",
                "value": "celsius"
              },
              {
                "id": "custom.displayMode",
                "value": "lcd-gauge"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "#EAB839",
                      "value": 42
                    },
                    {
                      "color": "red",
                      "value": 50
                    }
                  ]
                }
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Disk Type"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 85
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Model"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 285
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Status"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 129
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Disk"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 121
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 3,
        "y": 12
      },
      "id": 30,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 3,
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"diskTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"diskModel\" or r[\"_field\"] == \"diskStatus\" or r[\"_field\"] == \"diskType\" or r[\"_field\"] == \"diskTemperature\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group()",
          "refId": "A"
        }
      ],
      "title": "Disks",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "_measurement": true,
              "_start": true,
              "_stop": true,
              "_time": true,
              "agent_host": true,
              "diskID": false,
              "diskIndex": true,
              "host": true
            },
            "indexByName": {
              "_measurement": 3,
              "_start": 0,
              "_stop": 1,
              "_time": 2,
              "agent_host": 4,
              "diskID": 5,
              "diskIndex": 6,
              "diskModel": 9,
              "diskStatus": 10,
              "diskTemperature": 11,
              "diskType": 8,
              "host": 7
            },
            "renameByName": {
              "diskID": "Disk",
              "diskModel": "Model",
              "diskStatus": "Status",
              "diskTemperature": "Temperature",
              "diskType": "Disk Type"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "raidStatus"
            },
            "properties": [
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "1": {
                        "color": "green",
                        "index": 0,
                        "text": "Normal"
                      },
                      "2": {
                        "color": "orange",
                        "index": 1,
                        "text": "Repairing"
                      },
                      "3": {
                        "color": "blue",
                        "index": 2,
                        "text": "Migrating"
                      },
                      "4": {
                        "color": "blue",
                        "index": 3,
                        "text": "Expanding"
                      },
                      "5": {
                        "color": "blue",
                        "index": 4,
                        "text": "Deleting"
                      },
                      "6": {
                        "color": "blue",
                        "index": 5,
                        "text": "Creating"
                      },
                      "7": {
                        "color": "blue",
                        "index": 6,
                        "text": "Syncing"
                      },
                      "8": {
                        "color": "blue",
                        "index": 7,
                        "text": "Parity Checking"
                      },
                      "9": {
                        "color": "blue",
                        "index": 8,
                        "text": "Assembling"
                      },
                      "10": {
                        "color": "blue",
                        "index": 9,
                        "text": "Canceling"
                      },
                      "11": {
                        "color": "red",
                        "index": 10,
                        "text": "Degraded"
                      },
                      "12": {
                        "color": "red",
                        "index": 11,
                        "text": "Crashed"
                      }
                    },
                    "type": "value"
                  }
                ]
              },
              {
                "id": "custom.align",
                "value": "center"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 15,
        "y": 12
      },
      "id": 34,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"raidTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"raidStatus\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> last()\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group()",
          "refId": "A"
        }
      ],
      "title": "RAID Status",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "_measurement": true,
              "_start": true,
              "_stop": true,
              "_time": true,
              "agent_host": true,
              "host": true,
              "raidIndex": true
            },
            "indexByName": {},
            "renameByName": {
              "raidName": "Name",
              "raidStatus": "Status"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 53,
      "panels": [],
      "title": "Performance",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 100,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Total"
            },
            "properties": [
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "none"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 21
      },
      "id": 22,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "numCpus = from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"systemStats\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ssCpuNumCpus\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> keep(columns: [\"_time\", \"_start\", \"_stop\", \"host\", \"agent_host\", \"ssCpuNumCpus\"])\r\n\r\nstats = from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"systemStats\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ssCpuRawSystem\" or r[\"_field\"] == \"ssCpuRawUser\" or r[\"_field\"] == \"ssCpuRawWait\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> derivative()\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> keep(columns: [\"_time\", \"_start\", \"_stop\", \"host\", \"agent_host\", \"ssCpuRawSystem\", \"ssCpuRawUser\", \"ssCpuRawWait\"])\r\n\r\njoin(\r\n    tables: { numCpus: numCpus, stats: stats },\r\n    on: [\"_time\", \"_start\", \"_stop\"]\r\n  )\r\n  |> map(fn: (r) => ({\r\n    r with\r\n    \"ssCpuRawSystem\": r[\"ssCpuRawSystem\"] / float(v: r[\"ssCpuNumCpus\"]),\r\n    \"ssCpuRawUser\": r[\"ssCpuRawUser\"] / float(v: r[\"ssCpuNumCpus\"]),\r\n    \"ssCpuRawWait\": r[\"ssCpuRawWait\"] / float(v: r[\"ssCpuNumCpus\"]),\r\n  }))\r\n  |> drop(columns: [\"ssCpuNumCpus\"])\r\n",
          "refId": "A"
        }
      ],
      "title": "CPU",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "mode": "columns"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_start": 1,
              "_stop": 2,
              "_time": 0,
              "agent_host": 3,
              "host": 4,
              "ssCpuRawSystem": 6,
              "ssCpuRawUser": 5,
              "ssCpuRawWait": 7
            },
            "renameByName": {
              "ssCpuRawSystem": "System",
              "ssCpuRawUser": "User",
              "ssCpuRawWait": "I/O Wait"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {}
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "deckbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Total"
            },
            "properties": [
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "none"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 21
      },
      "id": 13,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "memTotal = from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hrStorageTable\")\r\n  |> filter(fn: (r) => r[\"hrStorageDescr\"] == \"Physical memory\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"hrStorageSize\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> rename(columns: { \"hrStorageSize\": \"memTotal\" })\r\n  |> keep(columns: [\"_time\", \"_start\", \"_stop\", \"host\", \"agent_host\", \"memTotal\"])\r\n\r\nmemStats = from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"memory\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"memAvailReal\" or r[\"_field\"] == \"memBuffer\" or r[\"_field\"] == \"memCached\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> keep(columns: [\"_time\", \"_start\", \"_stop\", \"host\", \"agent_host\", \"memAvailReal\", \"memBuffer\", \"memCached\"])\r\n\r\njoin(\r\n    tables: { memTotal: memTotal, memStats: memStats },\r\n    on: [\"_time\", \"_start\", \"_stop\", \"host\", \"agent_host\"]\r\n  )\r\n  |> map(fn: (r) => ({ r with \"memUsed\": r[\"memTotal\"] - (r[\"memAvailReal\"] + r[\"memBuffer\"] + r[\"memCached\"]) }))\r\n  |> drop(columns: [\"memTotal\", \"_start\", \"_stop\", \"agent_host\", \"host\"])\r\n\r\n",
          "refId": "A"
        }
      ],
      "title": "Physical Memory",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "memAvailReal": "Free",
              "memBuffer": "Buffer",
              "memCached": "Cached",
              "memUsed": "Used"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {}
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 21
      },
      "id": 18,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"laTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"laLoadFloat\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> aggregateWindow(every: ${interval}, fn: mean)",
          "refId": "A"
        }
      ],
      "title": "Load Average",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "valueLabel": "laNames"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "binBps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 29
      },
      "id": 15,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ifXTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ifHCInOctets\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> filter(fn: (r) => contains(value: r[\"ifName\"], set: ${interface:json}))\r\n  |> derivative()\r\n  |> aggregateWindow(every: ${interval}, fn: mean)",
          "refId": "A"
        }
      ],
      "title": "Network RX",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "valueLabel": "ifName"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "binBps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 29
      },
      "id": 16,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"ifXTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"ifHCOutOctets\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> filter(fn: (r) => contains(value: r[\"ifName\"], set: ${interface:json}))\r\n  |> derivative()\r\n  |> aggregateWindow(every: ${interval}, fn: mean)",
          "refId": "A"
        }
      ],
      "title": "Network TX",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "valueLabel": "ifName"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "iops"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 37
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"storageIOTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"storageIOReads\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> filter(fn: (r) => contains(value: r[\"storageIODevice\"], set: ${devices:json}))\r\n  |> derivative()\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n",
          "refId": "A"
        }
      ],
      "title": "Disk I/O Read",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "mode": "columns",
            "valueLabel": "storageIODevice"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "iops"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 37
      },
      "id": 10,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"storageIOTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"storageIOWrites\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> filter(fn: (r) => contains(value: r[\"storageIODevice\"], set: ${devices:json}))\r\n  |> derivative()\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n",
          "refId": "A"
        }
      ],
      "title": "Disk I/O Write",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "mode": "columns",
            "valueLabel": "storageIODevice"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "binBps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 45
      },
      "id": 9,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"storageIOTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"storageIONReadX\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> filter(fn: (r) => contains(value: r[\"storageIODevice\"], set: ${devices:json}))\r\n  |> derivative()\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n",
          "refId": "A"
        }
      ],
      "title": "Disk Throughput Read",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "mode": "columns",
            "valueLabel": "storageIODevice"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "binBps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 45
      },
      "id": 11,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"storageIOTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"storageIONWrittenX\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> filter(fn: (r) => contains(value: r[\"storageIODevice\"], set: ${devices:json}))\r\n  |> derivative()\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n",
          "refId": "A"
        }
      ],
      "title": "Disk Throughput Write",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "mode": "columns",
            "valueLabel": "storageIODevice"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 53
      },
      "id": 24,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"flashCacheTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"flashCacheReadHits\" or r[\"_field\"] == \"flashCacheWriteHits\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> derivative()\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
          "refId": "A"
        }
      ],
      "title": "Cache Hits",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "flashCacheReadHits": "Read Hits",
              "flashCacheWriteHits": "Write Hits"
            }
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 53
      },
      "id": 25,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"flashCacheTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"flashCacheWriteHitRate\" or r[\"_field\"] == \"flashCacheReadHitRate\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")",
          "refId": "A"
        }
      ],
      "title": "Cache Hit Rate",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "flashCacheReadHitRate": "Read Hit Rate",
              "flashCacheReadHits": "Read Hits",
              "flashCacheWriteHitRate": "Write Hit Rate",
              "flashCacheWriteHits": "Write Hits"
            }
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 61
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"synoSystem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"temperature\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> map(fn: (r) => ({ \"_time\": r[\"_time\"], \"_field\": \"CPU\", \"_value\": r[\"_value\"] }))\r\n  |> aggregateWindow(every: ${interval}, fn: mean)",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"diskTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"diskTemperature\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> map(fn: (r) => ({ \"_time\": r[\"_time\"], \"_field\": r[\"diskID\"], \"_value\": r[\"_value\"] }))\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n",
          "refId": "B"
        }
      ],
      "title": "Temperatures",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 61
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"diskTable\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"diskTemperature\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> group(columns: [\"diskID\"])\r\n  |> aggregateWindow(every: ${interval}, fn: mean)",
          "refId": "A"
        }
      ],
      "title": "Disk Temperatures",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 69
      },
      "id": 27,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "repeat": "volumes",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hrStorageTable\")\r\n  |> filter(fn: (r) => r[\"hrStorageDescr\"] == ${volumes:doublequote})\r\n  |> filter(fn: (r) => r[\"_field\"] == \"hrStorageAllocationUnits\" or r[\"_field\"] == \"hrStorageSize\" or r[\"_field\"] == \"hrStorageUsed\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({\r\n    r with\r\n    \"hrStorageSize\": r[\"hrStorageSize\"] / 1024.0 * r[\"hrStorageAllocationUnits\"],\r\n    \"hrStorageUsed\": r[\"hrStorageUsed\"] / 1024.0 * r[\"hrStorageAllocationUnits\"],\r\n  }))\r\n  |> drop(columns: [\"hrStorageAllocationUnits\"])\r\n",
          "refId": "A"
        }
      ],
      "title": "Storage (${volumes})",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_start": 3,
              "_stop": 4,
              "_time": 0,
              "agent_host": 5,
              "host": 6,
              "hrStorageDescr": 7,
              "hrStorageIndex": 8,
              "hrStorageSize": 2,
              "hrStorageUsed": 1
            },
            "renameByName": {
              "hrStorageSize": "Total",
              "hrStorageUsed": "Used"
            }
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${source}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 69
      },
      "id": 28,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "repeat": "volumes",
      "repeatDirection": "v",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${source}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"hrStorageTable\")\r\n  |> filter(fn: (r) => r[\"hrStorageDescr\"] == ${volumes:doublequote})\r\n  |> filter(fn: (r) => r[\"_field\"] == \"hrStorageSize\" or r[\"_field\"] == \"hrStorageUsed\")\r\n  |> filter(fn: (r) => r[\"agent_host\"] == ${host:doublequote})\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({\r\n    r with\r\n    \"Used\": r[\"hrStorageUsed\"] / r[\"hrStorageSize\"]\r\n  }))\r\n  |> drop(columns: [\"hrStorageSize\", \"hrStorageUsed\"])\r\n",
          "refId": "A"
        }
      ],
      "title": "Storage Capacity (${volumes})",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_start": 3,
              "_stop": 4,
              "_time": 0,
              "agent_host": 5,
              "host": 6,
              "hrStorageDescr": 7,
              "hrStorageIndex": 8,
              "hrStorageSize": 2,
              "hrStorageUsed": 1
            },
            "renameByName": {
              "hrStorageSize": "Total",
              "hrStorageUsed": "Used"
            }
          }
        }
      ],
      "type": "timeseries"
    }
  ],
  "refresh": "5m",
  "schemaVersion": 34,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "InfluxDB",
          "value": "InfluxDB"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Data source",
        "multi": false,
        "name": "source",
        "options": [],
        "query": "influxdb",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "auto": true,
        "auto_count": 30,
        "auto_min": "10s",
        "current": {
          "selected": false,
          "text": "1m",
          "value": "1m"
        },
        "hide": 0,
        "label": "Interval",
        "name": "interval",
        "options": [
          {
            "selected": false,
            "text": "auto",
            "value": "$__auto_interval_interval"
          },
          {
            "selected": false,
            "text": "10s",
            "value": "10s"
          },
          {
            "selected": false,
            "text": "30s",
            "value": "30s"
          },
          {
            "selected": true,
            "text": "1m",
            "value": "1m"
          },
          {
            "selected": false,
            "text": "10m",
            "value": "10m"
          },
          {
            "selected": false,
            "text": "30m",
            "value": "30m"
          },
          {
            "selected": false,
            "text": "1h",
            "value": "1h"
          },
          {
            "selected": false,
            "text": "6h",
            "value": "6h"
          },
          {
            "selected": false,
            "text": "12h",
            "value": "12h"
          },
          {
            "selected": false,
            "text": "1d",
            "value": "1d"
          },
          {
            "selected": false,
            "text": "7d",
            "value": "7d"
          },
          {
            "selected": false,
            "text": "14d",
            "value": "14d"
          },
          {
            "selected": false,
            "text": "30d",
            "value": "30d"
          }
        ],
        "query": "10s,30s,1m,10m,30m,1h,6h,12h,1d,7d,14d,30d",
        "queryValue": "",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      },
      {
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(\r\n  bucket: v.defaultBucket,\r\n  tag: \"agent_host\"\r\n)",
        "hide": 0,
        "includeAll": false,
        "label": "Host",
        "multi": false,
        "name": "host",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(\r\n  bucket: v.defaultBucket,\r\n  tag: \"agent_host\"\r\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(\r\n  bucket: v.defaultBucket,\r\n  tag: \"ifName\"\r\n)",
        "hide": 0,
        "includeAll": true,
        "label": "Interface",
        "multi": true,
        "name": "interface",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(\r\n  bucket: v.defaultBucket,\r\n  tag: \"ifName\"\r\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(\r\n  bucket: v.defaultBucket,\r\n  tag: \"hrStorageDescr\"\r\n)",
        "hide": 0,
        "includeAll": true,
        "label": "Volumes",
        "multi": true,
        "name": "volumes",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(\r\n  bucket: v.defaultBucket,\r\n  tag: \"hrStorageDescr\"\r\n)",
        "refresh": 1,
        "regex": "/^\\/volume[0-9]+$/",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(\r\n  bucket: v.defaultBucket,\r\n  tag: \"storageIODevice\"\r\n)",
        "hide": 0,
        "includeAll": true,
        "label": "Devices",
        "multi": true,
        "name": "devices",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagValues(\r\n  bucket: v.defaultBucket,\r\n  tag: \"storageIODevice\"\r\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-30m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Synology NAS",
  "uid": "4wq2HJAnk",
  "version": 6,
  "weekStart": ""
}